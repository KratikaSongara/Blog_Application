package com.masai.security;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

@EnableWebSecurity
public class SecurityConfiguration extends WebSecurityConfigurerAdapter{

	@Autowired
    UserDetailsService userDetailsService;

	//for authentication
    @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        auth.userDetailsService(userDetailsService);
    }

    //for authorization
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http.authorizeRequests() //this line says authorize all api
                .antMatchers("/admin").hasRole("ADMIN") //this line says for /admin api allow the user which has a role as admin
                .antMatchers("/user").hasAnyRole("ADMIN", "USER") //this line says for /user api allow user which either has a role as admin or user
                .antMatchers("/").permitAll() //says allow all users for / api
                .and().formLogin(); //this line says allow form login
    }

    @Bean
    public PasswordEncoder getPasswordEncoder() {
        return NoOpPasswordEncoder.getInstance();
    }
    
}
